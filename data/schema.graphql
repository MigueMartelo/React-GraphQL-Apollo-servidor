type Cliente {
  id: ID
  nombre: String
  apellido: String
  empresa: String    
  email: String
  edad: Int
  tipo: TipoCliente
  pedidos: [Pedido]
}
type Email {
  email: String
}
type Pedido {
  producto: String
  precio: Int
}
enum TipoCliente {
  BASICO
  PREMIUM
}
type Query {
  getClientes(limite: Int) : [Cliente]
  getCliente(id:ID) : Cliente
}
input EmailInput {
  email: String!
}
input PedidoInput {
  producto: String!
  precio: Int!
}
input ClienteInput {
  id: ID
  nombre: String!
  apellido: String!
  empresa: String!
  email: String!
  edad: Int!
  tipo: TipoCliente!
  pedidos: [PedidoInput]
}
""" Mutations para crear nuevos clientes """
type Mutation {
  #Nombre del Resolver, Input con los datos y el valor que retorna
  crearCliente(input: ClienteInput) : Cliente
  actualizarCliente(input: ClienteInput) : Cliente
  eliminarCliente(id: ID!) : String
}